digraph {
graph [pad="0.212,0.055" bgcolor=lightgray]
node [style=filled]
a [fillcolor="#d62728" pos="0,0!"]
b [fillcolor="#1f77b4" pos="0,1!"]
c [fillcolor="#2ca02c" pos="2,2!"]
d [fillcolor="#ff7f0e" pos="-1,0!"]
a -> b
a -> c
a -> d
}
`
dotSrc = `
digraph {
graph [pad="0.212,0.055" bgcolor=lightgray]
node [style=filled]
a [fillcolor="#d62728" pos="0,0!"]
b [fillcolor="#1f77b4" pos="0,1!"]
c [fillcolor="#2ca02c" pos="2,2!"]
d [fillcolor="#ff7f0e" pos="-1,0!"]
a -> b
a -> c
a -> d
}
shiny::runApp('C:/Users/fonsec16/OneDrive - Michigan State University/Documents/CAFO-July-2021/Update-Website-July-2021')
runApp('C:/Users/fonsec16/OneDrive - Michigan State University/Documents/CAFO-July-2021/Update-Website-July-2021')
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(up_forest)
View(up_forest)
runApp()
nrow(up_forest)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
nrow(timedata2)
runApp()
nrow(timedata2)
timedata2 <- testtimeline  %>% filter(UR=="Yes")
nrow(timedata2)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
img <- image_read("datasets/round_jan_mar.png")
des <- data.frame(image_ocr_data(img))
View(des)
runApp()
imag_desti <- image_read("datasets/round_jan_mar.png")
imag_destiller <- data.frame(image_ocr_data(imag_desti))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
citation(AER)
library(AER)
library(AER)
citation(AER)
citation("AER")
runApp()
runApp()
runApp()
detach("package:AER", unload = TRUE)
runApp()
rlang::last_error()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
library(readxl)
graph_cs_cs <- read_excel("~/graph_cs_cs.xlsx")
View(graph_cs_cs)
View(graph_cs_cs)
View(ROB_joint_tl)
View(r2)
View(r22_1)
> library(readxl)
> graph_cs_cs <- read_excel("~/graph_cs_cs.xlsx", sheet = "2")
> View(graph_cs_cs)
library(readxl)
graph_cs_cs <- read_excel("~/graph_cs_cs.xlsx", sheet = "2")
View(graph_cs_cs)
library(readxl)
graph_cs_cs <- read_excel("~/graph_cs_cs.xlsx", sheet = "2")
View(graph_cs_cs)
View(r22_1)
graph_cs_cs%>%
ggplot(aes(x = factor(`TBias`, level = c('Question 1', 'Question 2')), fill = Bias)) +
geom_bar(position = "fill") +
scale_x_discrete(labels = label_wrap(50))+
scale_y_continuous(labels = scales::percent)+
coord_flip() +
geom_text(aes(label = scales::percent(..count../tapply(..count.., ..x.. ,sum)[..x..])),
position = position_fill(vjust = 0.5),
stat = "count")
ggplot(aes(x = factor(`Type of Bias`, level = c('Question 10', 'Question 9', 'Question 8', 'Question 7', 'Question 6', 'Question 5', 'Question 4', 'Question 3', 'Question 2', 'Question 1')), fill = Bias)) +
geom_bar(position = "fill")
ggplot(aes(x = factor(`TBias`, level = c('Question 1', 'Question 2')), fill = Bias)) +
geom_bar(position = "fill")
ggplot(aes(x = factor(`TBias`, level = c('Question 1', 'Question 2')), fill = Bias)) +
geom_bar(position = "fill") +
scale_x_discrete(labels = label_wrap(50))+
scale_y_continuous(labels = scales::percent)+
coord_flip() +
geom_text(aes(label = scales::percent(..count../tapply(..count.., ..x.. ,sum)[..x..])),
position = position_fill(vjust = 0.5),
stat = "count")
ggplot(aes(x = factor(`TBias`, level = c('Question 1', 'Question 2')), fill = Bias)) +
geom_bar(position = "fill") +
scale_x_discrete(labels = label_wrap(50))+
scale_y_continuous(labels = scales::percent)+
coord_flip() +
geom_text(aes(label = scales::percent(..count../tapply(..count.., ..x.. ,sum)[..x..])),
position = position_fill(vjust = 0.5),
stat = "count")
graph_cs_cs%>%
ggplot(aes(x = factor(`TBias`, level = c('Question 1', 'Question 2')), fill = Bias)) +
geom_bar(position = "fill")
graph_cs_cs%>%
ggplot(aes(x = factor(`TBias`, level = c('Question 1', 'Question 2')), fill = Bias)) +
geom_bar(position = "fill") +
scale_x_discrete(labels = label_wrap(50))+
scale_y_continuous(labels = scales::percent)+
coord_flip() +
geom_text(aes(label = scales::percent(..count../tapply(..count.., ..x.. ,sum)[..x..])),
position = position_fill(vjust = 0.5),
stat = "count")
graph_cs_cs%>%
ggplot(aes(x = factor(`TBias`, level = c('Question 1', 'Question 2')), fill = Bias)) +
geom_bar(position = "fill") +
scale_x_discrete(labels = label_wrap(50))+
scale_y_continuous(labels = scales::percent)+
coord_flip() +
geom_text(
stat = "count")
graph_cs_cs%>%
ggplot(aes(x = factor(`TBias`, level = c('Question 1', 'Question 2')), fill = Bias)) +
geom_bar(position = "fill") +
scale_x_discrete(labels = label_wrap(50))+
scale_y_continuous(labels = scales::percent)+
coord_flip()
graph_cs_cs%>%
ggplot(aes(x = factor(`TBias`, level = c('Question 1', 'Question 2')), fill = Bias)) +
geom_bar(position = "fill") +
scale_x_discrete(labels = label_wrap(50))+
scale_y_continuous(labels = scales::percent)+
coord_flip()
graph_cs_cs%>%
ggplot(aes(x = factor(`TBias`, level = c('Question 1', 'Question 2')), fill = Bias)) +
geom_bar(position = "fill") +
scale_x_discrete(labels = label_wrap(50))+
scale_y_continuous(labels = scales::percent)+
coord_flip() +
scale_fill_manual(values=c("forestgreen",
"lightgreen",
"salmon",
"red"))
graph_cs_cs%>%
ggplot(aes(x = factor(`TBias`, level = c('Question 1', 'Question 2')), fill = Bias)) +
geom_bar(position = "fill") +
scale_x_discrete(labels = label_wrap(50))+
scale_y_continuous(labels = scales::percent)+
coord_flip() +
scale_fill_manual(values=c("forestgreen",
"lightgreen",
"salmon",
"red"))
graph_cs_cs%>%
ggplot(aes(x = factor(`TBias`, level = c('Question 1', 'Question 2')), fill = Bias)) +
geom_bar(position = "fill") +
scale_x_discrete(labels = label_wrap(50))+
scale_y_continuous(labels = scales::percent)+
coord_flip() +
scale_fill_manual(values=c("Definitely yes" =  "forestgreen",
"Probably yes" = "lightgreen",
"Probably no"="salmon",
"Definitely no" = "red"))
graph_cs_cs %>% mutate(Bias = forcats::fct_relevel(Bias, "Definitely yes","Probably yes", "Probably no", "Definitely no"))
graph_cs_cs%>%
ggplot(aes(x = factor(`TBias`, level = c('Question 1', 'Question 2')), fill = Bias)) +
geom_bar(position = "fill") +
scale_x_discrete(labels = label_wrap(50))+
scale_y_continuous(labels = scales::percent)+
coord_flip() +
scale_fill_manual(values=c("Definitely yes" =  "forestgreen",
"Probably yes" = "lightgreen",
"Probably no"="salmon",
"Definitely no" = "red"))
graph_cs_cs %>% graph_cs_cs <- mutate(Bias = forcats::fct_relevel(Bias, "Definitely yes","Probably yes", "Probably no", "Definitely no"))
levels(as.factor(graph_cs_cs$Bias))
graph_cs_cs%>%
ggplot(aes(x = factor(`TBias`, level = c('Question 1', 'Question 2')), fill = factor(Bias, levels=c("Definitely yes", "Probably yes", "Probably no", "Definitely no")))) +
geom_bar(position = "fill") +
scale_x_discrete(labels = label_wrap(50))+
scale_y_continuous(labels = scales::percent)+
coord_flip() +
scale_fill_manual(values=c("Definitely yes" =  "forestgreen",
"Probably yes" = "lightgreen",
"Probably no"="salmon",
"Definitely no" = "red"))
graph_cs_cs$Bias <- factor(graph_cs_cs$Bias, levels = c("Definitely yes", "Probably yes", "Probably no", "Definitely no"))
levels(as.factor(graph_cs_cs$Bias))
graph_cs_cs%>%
ggplot(aes(x = factor(`TBias`, level = c('Question 1', 'Question 2')), fill = factor(Bias, levels=c("Definitely yes", "Probably yes", "Probably no", "Definitely no")))) +
geom_bar(position = "fill") +
scale_x_discrete(labels = label_wrap(50))+
scale_y_continuous(labels = scales::percent)+
coord_flip() +
scale_fill_manual(values=c("Definitely yes" =  "forestgreen",
"Probably yes" = "lightgreen",
"Probably no"="salmon",
"Definitely no" = "red"))
View(graph_cs_cs)
rm(graph_cs_cs)
library(readxl)
graph_cs_cs <- read_excel("~/graph_cs_cs.xlsx", sheet = "2")
View(graph_cs_cs)
graph_cs_cs$Bias <- factor(graph_cs_cs$Bias, levels = c("Definitely yes", "Probably yes", "Probably no", "Definitely no"))
graph_cs_cs%>%
ggplot(aes(x = factor(`TBias`, level = c('Question 1', 'Question 2')), fill = factor(Bias, levels=c("Definitely yes", "Probably yes", "Probably no", "Definitely no")))) +
geom_bar(position = "fill") +
scale_x_discrete(labels = label_wrap(50))+
scale_y_continuous(labels = scales::percent)+
coord_flip() +
scale_fill_manual(values=c("Definitely yes" =  "forestgreen",
"Probably yes" = "lightgreen",
"Probably no"="salmon",
"Definitely no" = "red"))
rm(graph_cs_cs)
library(readxl)
graph_cs_cs <- read_excel("~/graph_cs_cs.xlsx", sheet = "2")
mutate(Bias = forcats::fct_relevel(Bias, "Definitely yes", "Probably yes", "Probably no", "Definitely no"),
g1 <- graph_cs_cs %>%
mutate(Bias = forcats::fct_relevel(Bias, "Definitely yes", "Probably yes", "Probably no", "Definitely no"))
rm(graph_cs_cs)
library(readxl)
graph_cs_cs <- read_excel("~/graph_cs_cs.xlsx", sheet = "2")
levels(graph_cs_cs)
levels(graph_cs_cs$Bias)
library(readxl)
graph_cs_cs <- read_excel("~/graph_cs_cs.xlsx", sheet = "2")
graph_cs_cs$Bias <- factor(graph_cs_cs$Bias, levels = c("Definitely yes", "Probably yes", "Probably no", "Definitely no"))
graph_cs_cs%>%
ggplot(aes(x = factor(`TBias`, level = c('Question 1', 'Question 2')), fill = Bias)) +
geom_bar(position = "fill") +
scale_x_discrete(labels = label_wrap(50))+
scale_y_continuous(labels = scales::percent)+
coord_flip() +
scale_fill_manual(values=c("Definitely yes" =  "forestgreen",
"Probably yes" = "lightgreen",
"Probably no"="salmon",
"Definitely no" = "red"))
library(readxl)
graph_cs_cs <- read_excel("~/graph_cs_cs.xlsx", sheet = "3")
library(readxl)
graph_cs_cs <- read_excel("~/graph_cs_cs.xlsx", sheet = "3")
View(graph_cs_cs)
graph_cs_cs$Bias <- factor(graph_cs_cs$Bias, levels = c("Definitely yes", "Probably yes", "Probably no", "Definitely no"))
graph_cs_cs%>%
ggplot(aes(x = factor(`TBias`, level = c('Question 1', 'Question 2')), fill = Bias)) +
geom_bar(position = "fill") +
scale_x_discrete(labels = label_wrap(50))+
scale_y_continuous(labels = scales::percent)+
coord_flip() +
scale_fill_manual(values=c("Definitely yes" =  "forestgreen",
"Probably yes" = "lightgreen",
"Probably no"="salmon",
"Definitely no" = "red"))
graph_cs_cs%>%
ggplot(aes(x = factor(`TBias`, level = c('Question 1', 'Question 2', 'Question 3', 'Question 4')), fill = Bias)) +
geom_bar(position = "fill") +
scale_x_discrete(labels = label_wrap(50))+
scale_y_continuous(labels = scales::percent)+
coord_flip() +
scale_fill_manual(values=c("Definitely yes" =  "forestgreen",
"Probably yes" = "lightgreen",
"Probably no"="salmon",
"Definitely no" = "red"))
graph_cs_cs%>%
ggplot(aes(x = factor(`TBias`, level = c('Question 1', 'Question 2', 'Question 3', 'Question 4')), fill = Bias)) +
geom_bar(position = "fill") +
scale_x_discrete(labels = label_wrap(50))+
scale_y_continuous(labels = scales::percent)+
coord_flip() +
scale_fill_manual(values=c("Definitely yes" =  "forestgreen",
"Probably yes" = "lightgreen",
"Probably no"="salmon",
"Definitely no" = "red"))+ labs(x = "", fill = "Region")
graph_cs_cs%>%
ggplot(aes(x = factor(`TBias`, level = c('Question 1', 'Question 2', 'Question 3', 'Question 4')), fill = Bias)) +
geom_bar(position = "fill") +
scale_x_discrete(labels = label_wrap(50))+
scale_y_continuous(labels = scales::percent)+
coord_flip() +
scale_fill_manual(values=c("Definitely yes" =  "forestgreen",
"Probably yes" = "lightgreen",
"Probably no"="salmon",
"Definitely no" = "red"))+ labs(x = "", fill = "Question's answer")
library(readxl)
graph_cs_cs <- read_excel("~/graph_cs_cs.xlsx", sheet = "2")
graph_cs_cs$Bias <- factor(graph_cs_cs$Bias, levels = c("Definitely yes", "Probably yes", "Probably no", "Definitely no"))
graph_cs_cs%>%
ggplot(aes(x = factor(`TBias`, level = c('Question 1', 'Question 2', 'Question 3', 'Question 4')), fill = Bias)) +
geom_bar(position = "fill") +
scale_x_discrete(labels = label_wrap(50))+
scale_y_continuous(labels = scales::percent)+
coord_flip() +
scale_fill_manual(values=c("Definitely yes" =  "forestgreen",
"Probably yes" = "lightgreen",
"Probably no"="salmon",
"Definitely no" = "red"))+ labs(x = "", fill = "Question's answer")
graph_cs_cs%>%
ggplot(aes(x = factor(`TBias`, level = c('Question 1', 'Question 2', 'Question 3', 'Question 4')), fill = Bias)) +
geom_bar(position = "fill") +
scale_x_discrete(labels = label_wrap(50))+
scale_y_continuous(labels = scales::percent)+
coord_flip() +
scale_fill_manual(values=c("Definitely yes" =  "forestgreen",
"Probably yes" = "lightgreen",
"Probably no"="salmon",
"Definitely no" = "red"))+ labs(x = "", fill = "Question's answer")+ ylab("Percentage")
library(readxl)
graph_cs_cs <- read_excel("~/graph_cs_cs.xlsx", sheet = "3")
graph_cs_cs$Bias <- factor(graph_cs_cs$Bias, levels = c("Definitely yes", "Probably yes", "Probably no", "Definitely no"))
graph_cs_cs%>%
ggplot(aes(x = factor(`TBias`, level = c('Question 1', 'Question 2', 'Question 3', 'Question 4')), fill = Bias)) +
geom_bar(position = "fill") +
scale_x_discrete(labels = label_wrap(50))+
scale_y_continuous(labels = scales::percent)+
coord_flip() +
scale_fill_manual(values=c("Definitely yes" =  "forestgreen",
"Probably yes" = "lightgreen",
"Probably no"="salmon",
"Definitely no" = "red"))+ labs(x = "", fill = "Question's answer")+ ylab("Percentage")
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
View(des)
library(tesseract)
results_test <- tesseract::ocr_data("datasets/flowchart_V01.png", engine = eng)
results_test <- tesseract::ocr_data("datasets/flowchart_V01.png")
View(results_test)
as.numeric(results_test[11,1])
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
citation("tesseract")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
View(inclusionF)
runApp()
View(inclusionF)
View(inclusion)
runApp()
View(inclusion)
View(inclusionF)
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(readxl)
FORMULARIO <- read_excel("C:/Users/fonsec16/Downloads/FORMULARIO.xlsx")
View(FORMULARIO)
FORMULARIO$GENERO <- as.factor(FORMULARIO$GENERO)
FORMULARIO$SOCIOECONOMIA <- as.factor(FORMULARIO$SOCIOECONOMIA)
FORMULARIO$ALTURAS <- as.factor(FORMULARIO$ALTURAS)
str(FORMULARIO)
FORMULARIO$EDAD <- as.factor(FORMULARIO$EDAD)
class(FORMULARIO$EDAD)
str(FORMULARIO$EDAD)
ggplot(FORMULARIO, aes(x = GENERO, fill = ALTURAS)) +
geom_bar()
library(ggplot2)
ggplot(FORMULARIO, aes(x = GENERO, fill = ALTURAS)) +
geom_bar()
str(FORMULARIO)
## GRAFICA 1
ggplot(FORMULARIO, aes(x = GENERO, fill = ALTURAS)) +
geom_bar(position = "dodge")
## GRAFICA 1
ggplot(FORMULARIO, aes(x = GENERO, fill = ALTURAS)) +
geom_bar()
##
ggplot(FORMULARIO, aes(x = Category, y = APORTE)) +
geom_boxplot()
##
ggplot(FORMULARIO, aes(x = GENERO, y = APORTE)) +
geom_boxplot()
##
ggplot(FORMULARIO, aes(x = GENERO, y = APORTE)) +
geom_violin()
model <- lm(APORTE ~ GENERO, data = FORMULARIO)
summary(model)
model <- lm(APORTE ~ GENERO + SOCIOECONOMIA, data = FORMULARIO)
summary(model)
model <- lm(APORTE ~ GENERO, data = FORMULARIO)
summary(model)
model <- lm(APORTE ~ GENERO, data = FORMULARIO)
model <- lm(APORTE ~ GENERO, data = FORMULARIO)
model1 <- lm(APORTE ~ GENERO, data = FORMULARIO)
summary(model1)
model1 <- lm(APORTE ~ EDAD, data = FORMULARIO)
summary(model1)
model1 <- lm(APORTE ~ SOCIOECONOMIA , data = FORMULARIO)
summary(model1)
model <- lm(APORTE ~ GENERO + SOCIOECONOMIA, data = FORMULARIO)
summary(model)
FORMULARIO$FORMA <- as.factor(FORMULARIO$FORMA)
FORMULARIO$COLOR <- as.factor(FORMULARIO$COLOR)
cross_tab <- table(FORMULARIO$ALTURAS, FORMULARIO$FORMA, FORMULARIO$COLOR)
print(cross_tab)
view(cross_tab)
cross_tab <- table(FORMULARIO$ALTURAS, FORMULARIO$FORMA)
print(cross_tab)
cross_tab <- table(FORMULARIO$ALTURAS, FORMULARIO$FORMA, , FORMULARIO$COLOR)
print(cross_tab)
cross_tab <- table(FORMULARIO$ALTURAS, FORMULARIO$FORMA, FORMULARIO$COLOR)
print(cross_tab)
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
